// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pdk_RadarFreespace.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_pdk_5fRadarFreespace_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_pdk_5fRadarFreespace_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "pdk_MsgHeader.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_pdk_5fRadarFreespace_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_pdk_5fRadarFreespace_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pdk_5fRadarFreespace_2eproto;
namespace pb {
namespace PDK {
class FreespaceDataChannel;
struct FreespaceDataChannelDefaultTypeInternal;
extern FreespaceDataChannelDefaultTypeInternal _FreespaceDataChannel_default_instance_;
class PointXY;
struct PointXYDefaultTypeInternal;
extern PointXYDefaultTypeInternal _PointXY_default_instance_;
class inner_object;
struct inner_objectDefaultTypeInternal;
extern inner_objectDefaultTypeInternal _inner_object_default_instance_;
}  // namespace PDK
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::PDK::FreespaceDataChannel* Arena::CreateMaybeMessage<::pb::PDK::FreespaceDataChannel>(Arena*);
template<> ::pb::PDK::PointXY* Arena::CreateMaybeMessage<::pb::PDK::PointXY>(Arena*);
template<> ::pb::PDK::inner_object* Arena::CreateMaybeMessage<::pb::PDK::inner_object>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {
namespace PDK {

// ===================================================================

class PointXY final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.PDK.PointXY) */ {
 public:
  inline PointXY() : PointXY(nullptr) {}
  ~PointXY() override;
  explicit constexpr PointXY(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PointXY(const PointXY& from);
  PointXY(PointXY&& from) noexcept
    : PointXY() {
    *this = ::std::move(from);
  }

  inline PointXY& operator=(const PointXY& from) {
    CopyFrom(from);
    return *this;
  }
  inline PointXY& operator=(PointXY&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PointXY& default_instance() {
    return *internal_default_instance();
  }
  static inline const PointXY* internal_default_instance() {
    return reinterpret_cast<const PointXY*>(
               &_PointXY_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PointXY& a, PointXY& b) {
    a.Swap(&b);
  }
  inline void Swap(PointXY* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PointXY* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PointXY* New() const final {
    return new PointXY();
  }

  PointXY* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PointXY>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PointXY& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PointXY& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PointXY* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.PDK.PointXY";
  }
  protected:
  explicit PointXY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFXFieldNumber = 1,
    kFYFieldNumber = 2,
  };
  // optional float f_x = 1 [default = 0];
  bool has_f_x() const;
  private:
  bool _internal_has_f_x() const;
  public:
  void clear_f_x();
  float f_x() const;
  void set_f_x(float value);
  private:
  float _internal_f_x() const;
  void _internal_set_f_x(float value);
  public:

  // optional float f_y = 2 [default = 0];
  bool has_f_y() const;
  private:
  bool _internal_has_f_y() const;
  public:
  void clear_f_y();
  float f_y() const;
  void set_f_y(float value);
  private:
  float _internal_f_y() const;
  void _internal_set_f_y(float value);
  public:

  // @@protoc_insertion_point(class_scope:pb.PDK.PointXY)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float f_x_;
  float f_y_;
  friend struct ::TableStruct_pdk_5fRadarFreespace_2eproto;
};
// -------------------------------------------------------------------

class inner_object final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.PDK.inner_object) */ {
 public:
  inline inner_object() : inner_object(nullptr) {}
  ~inner_object() override;
  explicit constexpr inner_object(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  inner_object(const inner_object& from);
  inner_object(inner_object&& from) noexcept
    : inner_object() {
    *this = ::std::move(from);
  }

  inline inner_object& operator=(const inner_object& from) {
    CopyFrom(from);
    return *this;
  }
  inline inner_object& operator=(inner_object&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const inner_object& default_instance() {
    return *internal_default_instance();
  }
  static inline const inner_object* internal_default_instance() {
    return reinterpret_cast<const inner_object*>(
               &_inner_object_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(inner_object& a, inner_object& b) {
    a.Swap(&b);
  }
  inline void Swap(inner_object* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(inner_object* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline inner_object* New() const final {
    return new inner_object();
  }

  inner_object* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<inner_object>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const inner_object& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const inner_object& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(inner_object* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.PDK.inner_object";
  }
  protected:
  explicit inner_object(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAPointsFieldNumber = 1,
  };
  // repeated .pb.PDK.PointXY a_points = 1;
  int a_points_size() const;
  private:
  int _internal_a_points_size() const;
  public:
  void clear_a_points();
  ::pb::PDK::PointXY* mutable_a_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >*
      mutable_a_points();
  private:
  const ::pb::PDK::PointXY& _internal_a_points(int index) const;
  ::pb::PDK::PointXY* _internal_add_a_points();
  public:
  const ::pb::PDK::PointXY& a_points(int index) const;
  ::pb::PDK::PointXY* add_a_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >&
      a_points() const;

  // @@protoc_insertion_point(class_scope:pb.PDK.inner_object)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY > a_points_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_pdk_5fRadarFreespace_2eproto;
};
// -------------------------------------------------------------------

class FreespaceDataChannel final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.PDK.FreespaceDataChannel) */ {
 public:
  inline FreespaceDataChannel() : FreespaceDataChannel(nullptr) {}
  ~FreespaceDataChannel() override;
  explicit constexpr FreespaceDataChannel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FreespaceDataChannel(const FreespaceDataChannel& from);
  FreespaceDataChannel(FreespaceDataChannel&& from) noexcept
    : FreespaceDataChannel() {
    *this = ::std::move(from);
  }

  inline FreespaceDataChannel& operator=(const FreespaceDataChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline FreespaceDataChannel& operator=(FreespaceDataChannel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FreespaceDataChannel& default_instance() {
    return *internal_default_instance();
  }
  static inline const FreespaceDataChannel* internal_default_instance() {
    return reinterpret_cast<const FreespaceDataChannel*>(
               &_FreespaceDataChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FreespaceDataChannel& a, FreespaceDataChannel& b) {
    a.Swap(&b);
  }
  inline void Swap(FreespaceDataChannel* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FreespaceDataChannel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FreespaceDataChannel* New() const final {
    return new FreespaceDataChannel();
  }

  FreespaceDataChannel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FreespaceDataChannel>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FreespaceDataChannel& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const FreespaceDataChannel& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FreespaceDataChannel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.PDK.FreespaceDataChannel";
  }
  protected:
  explicit FreespaceDataChannel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kASplinePointsFieldNumber = 2,
    kAInnerObjectDataFieldNumber = 3,
    kABsplineControlPointsFieldNumber = 4,
    kAControlPointsStatusFieldNumber = 5,
    kTHeaderFieldNumber = 1,
    kFVehicleHeadingRadFieldNumber = 8,
  };
  // repeated .pb.PDK.PointXY a_spline_points = 2;
  int a_spline_points_size() const;
  private:
  int _internal_a_spline_points_size() const;
  public:
  void clear_a_spline_points();
  ::pb::PDK::PointXY* mutable_a_spline_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >*
      mutable_a_spline_points();
  private:
  const ::pb::PDK::PointXY& _internal_a_spline_points(int index) const;
  ::pb::PDK::PointXY* _internal_add_a_spline_points();
  public:
  const ::pb::PDK::PointXY& a_spline_points(int index) const;
  ::pb::PDK::PointXY* add_a_spline_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >&
      a_spline_points() const;

  // repeated .pb.PDK.inner_object a_inner_object_data = 3;
  int a_inner_object_data_size() const;
  private:
  int _internal_a_inner_object_data_size() const;
  public:
  void clear_a_inner_object_data();
  ::pb::PDK::inner_object* mutable_a_inner_object_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::inner_object >*
      mutable_a_inner_object_data();
  private:
  const ::pb::PDK::inner_object& _internal_a_inner_object_data(int index) const;
  ::pb::PDK::inner_object* _internal_add_a_inner_object_data();
  public:
  const ::pb::PDK::inner_object& a_inner_object_data(int index) const;
  ::pb::PDK::inner_object* add_a_inner_object_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::inner_object >&
      a_inner_object_data() const;

  // repeated .pb.PDK.PointXY a_bspline_control_points = 4;
  int a_bspline_control_points_size() const;
  private:
  int _internal_a_bspline_control_points_size() const;
  public:
  void clear_a_bspline_control_points();
  ::pb::PDK::PointXY* mutable_a_bspline_control_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >*
      mutable_a_bspline_control_points();
  private:
  const ::pb::PDK::PointXY& _internal_a_bspline_control_points(int index) const;
  ::pb::PDK::PointXY* _internal_add_a_bspline_control_points();
  public:
  const ::pb::PDK::PointXY& a_bspline_control_points(int index) const;
  ::pb::PDK::PointXY* add_a_bspline_control_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >&
      a_bspline_control_points() const;

  // repeated sint32 a_control_points_status = 5;
  int a_control_points_status_size() const;
  private:
  int _internal_a_control_points_status_size() const;
  public:
  void clear_a_control_points_status();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_a_control_points_status(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_a_control_points_status() const;
  void _internal_add_a_control_points_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_a_control_points_status();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 a_control_points_status(int index) const;
  void set_a_control_points_status(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_a_control_points_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      a_control_points_status() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_a_control_points_status();

  // optional .pb.PDK.MsgHeader t_header = 1;
  bool has_t_header() const;
  private:
  bool _internal_has_t_header() const;
  public:
  void clear_t_header();
  const ::pb::PDK::MsgHeader& t_header() const;
  PROTOBUF_MUST_USE_RESULT ::pb::PDK::MsgHeader* release_t_header();
  ::pb::PDK::MsgHeader* mutable_t_header();
  void set_allocated_t_header(::pb::PDK::MsgHeader* t_header);
  private:
  const ::pb::PDK::MsgHeader& _internal_t_header() const;
  ::pb::PDK::MsgHeader* _internal_mutable_t_header();
  public:
  void unsafe_arena_set_allocated_t_header(
      ::pb::PDK::MsgHeader* t_header);
  ::pb::PDK::MsgHeader* unsafe_arena_release_t_header();

  // optional float f_vehicle_heading_rad = 8;
  bool has_f_vehicle_heading_rad() const;
  private:
  bool _internal_has_f_vehicle_heading_rad() const;
  public:
  void clear_f_vehicle_heading_rad();
  float f_vehicle_heading_rad() const;
  void set_f_vehicle_heading_rad(float value);
  private:
  float _internal_f_vehicle_heading_rad() const;
  void _internal_set_f_vehicle_heading_rad(float value);
  public:

  // @@protoc_insertion_point(class_scope:pb.PDK.FreespaceDataChannel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY > a_spline_points_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::inner_object > a_inner_object_data_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY > a_bspline_control_points_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > a_control_points_status_;
  ::pb::PDK::MsgHeader* t_header_;
  float f_vehicle_heading_rad_;
  friend struct ::TableStruct_pdk_5fRadarFreespace_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PointXY

// optional float f_x = 1 [default = 0];
inline bool PointXY::_internal_has_f_x() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PointXY::has_f_x() const {
  return _internal_has_f_x();
}
inline void PointXY::clear_f_x() {
  f_x_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float PointXY::_internal_f_x() const {
  return f_x_;
}
inline float PointXY::f_x() const {
  // @@protoc_insertion_point(field_get:pb.PDK.PointXY.f_x)
  return _internal_f_x();
}
inline void PointXY::_internal_set_f_x(float value) {
  _has_bits_[0] |= 0x00000001u;
  f_x_ = value;
}
inline void PointXY::set_f_x(float value) {
  _internal_set_f_x(value);
  // @@protoc_insertion_point(field_set:pb.PDK.PointXY.f_x)
}

// optional float f_y = 2 [default = 0];
inline bool PointXY::_internal_has_f_y() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PointXY::has_f_y() const {
  return _internal_has_f_y();
}
inline void PointXY::clear_f_y() {
  f_y_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float PointXY::_internal_f_y() const {
  return f_y_;
}
inline float PointXY::f_y() const {
  // @@protoc_insertion_point(field_get:pb.PDK.PointXY.f_y)
  return _internal_f_y();
}
inline void PointXY::_internal_set_f_y(float value) {
  _has_bits_[0] |= 0x00000002u;
  f_y_ = value;
}
inline void PointXY::set_f_y(float value) {
  _internal_set_f_y(value);
  // @@protoc_insertion_point(field_set:pb.PDK.PointXY.f_y)
}

// -------------------------------------------------------------------

// inner_object

// repeated .pb.PDK.PointXY a_points = 1;
inline int inner_object::_internal_a_points_size() const {
  return a_points_.size();
}
inline int inner_object::a_points_size() const {
  return _internal_a_points_size();
}
inline void inner_object::clear_a_points() {
  a_points_.Clear();
}
inline ::pb::PDK::PointXY* inner_object::mutable_a_points(int index) {
  // @@protoc_insertion_point(field_mutable:pb.PDK.inner_object.a_points)
  return a_points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >*
inner_object::mutable_a_points() {
  // @@protoc_insertion_point(field_mutable_list:pb.PDK.inner_object.a_points)
  return &a_points_;
}
inline const ::pb::PDK::PointXY& inner_object::_internal_a_points(int index) const {
  return a_points_.Get(index);
}
inline const ::pb::PDK::PointXY& inner_object::a_points(int index) const {
  // @@protoc_insertion_point(field_get:pb.PDK.inner_object.a_points)
  return _internal_a_points(index);
}
inline ::pb::PDK::PointXY* inner_object::_internal_add_a_points() {
  return a_points_.Add();
}
inline ::pb::PDK::PointXY* inner_object::add_a_points() {
  ::pb::PDK::PointXY* _add = _internal_add_a_points();
  // @@protoc_insertion_point(field_add:pb.PDK.inner_object.a_points)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >&
inner_object::a_points() const {
  // @@protoc_insertion_point(field_list:pb.PDK.inner_object.a_points)
  return a_points_;
}

// -------------------------------------------------------------------

// FreespaceDataChannel

// optional .pb.PDK.MsgHeader t_header = 1;
inline bool FreespaceDataChannel::_internal_has_t_header() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || t_header_ != nullptr);
  return value;
}
inline bool FreespaceDataChannel::has_t_header() const {
  return _internal_has_t_header();
}
inline const ::pb::PDK::MsgHeader& FreespaceDataChannel::_internal_t_header() const {
  const ::pb::PDK::MsgHeader* p = t_header_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::PDK::MsgHeader&>(
      ::pb::PDK::_MsgHeader_default_instance_);
}
inline const ::pb::PDK::MsgHeader& FreespaceDataChannel::t_header() const {
  // @@protoc_insertion_point(field_get:pb.PDK.FreespaceDataChannel.t_header)
  return _internal_t_header();
}
inline void FreespaceDataChannel::unsafe_arena_set_allocated_t_header(
    ::pb::PDK::MsgHeader* t_header) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(t_header_);
  }
  t_header_ = t_header;
  if (t_header) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.PDK.FreespaceDataChannel.t_header)
}
inline ::pb::PDK::MsgHeader* FreespaceDataChannel::release_t_header() {
  _has_bits_[0] &= ~0x00000001u;
  ::pb::PDK::MsgHeader* temp = t_header_;
  t_header_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::PDK::MsgHeader* FreespaceDataChannel::unsafe_arena_release_t_header() {
  // @@protoc_insertion_point(field_release:pb.PDK.FreespaceDataChannel.t_header)
  _has_bits_[0] &= ~0x00000001u;
  ::pb::PDK::MsgHeader* temp = t_header_;
  t_header_ = nullptr;
  return temp;
}
inline ::pb::PDK::MsgHeader* FreespaceDataChannel::_internal_mutable_t_header() {
  _has_bits_[0] |= 0x00000001u;
  if (t_header_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::PDK::MsgHeader>(GetArenaForAllocation());
    t_header_ = p;
  }
  return t_header_;
}
inline ::pb::PDK::MsgHeader* FreespaceDataChannel::mutable_t_header() {
  ::pb::PDK::MsgHeader* _msg = _internal_mutable_t_header();
  // @@protoc_insertion_point(field_mutable:pb.PDK.FreespaceDataChannel.t_header)
  return _msg;
}
inline void FreespaceDataChannel::set_allocated_t_header(::pb::PDK::MsgHeader* t_header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(t_header_);
  }
  if (t_header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(t_header));
    if (message_arena != submessage_arena) {
      t_header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, t_header, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  t_header_ = t_header;
  // @@protoc_insertion_point(field_set_allocated:pb.PDK.FreespaceDataChannel.t_header)
}

// repeated .pb.PDK.PointXY a_spline_points = 2;
inline int FreespaceDataChannel::_internal_a_spline_points_size() const {
  return a_spline_points_.size();
}
inline int FreespaceDataChannel::a_spline_points_size() const {
  return _internal_a_spline_points_size();
}
inline void FreespaceDataChannel::clear_a_spline_points() {
  a_spline_points_.Clear();
}
inline ::pb::PDK::PointXY* FreespaceDataChannel::mutable_a_spline_points(int index) {
  // @@protoc_insertion_point(field_mutable:pb.PDK.FreespaceDataChannel.a_spline_points)
  return a_spline_points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >*
FreespaceDataChannel::mutable_a_spline_points() {
  // @@protoc_insertion_point(field_mutable_list:pb.PDK.FreespaceDataChannel.a_spline_points)
  return &a_spline_points_;
}
inline const ::pb::PDK::PointXY& FreespaceDataChannel::_internal_a_spline_points(int index) const {
  return a_spline_points_.Get(index);
}
inline const ::pb::PDK::PointXY& FreespaceDataChannel::a_spline_points(int index) const {
  // @@protoc_insertion_point(field_get:pb.PDK.FreespaceDataChannel.a_spline_points)
  return _internal_a_spline_points(index);
}
inline ::pb::PDK::PointXY* FreespaceDataChannel::_internal_add_a_spline_points() {
  return a_spline_points_.Add();
}
inline ::pb::PDK::PointXY* FreespaceDataChannel::add_a_spline_points() {
  ::pb::PDK::PointXY* _add = _internal_add_a_spline_points();
  // @@protoc_insertion_point(field_add:pb.PDK.FreespaceDataChannel.a_spline_points)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >&
FreespaceDataChannel::a_spline_points() const {
  // @@protoc_insertion_point(field_list:pb.PDK.FreespaceDataChannel.a_spline_points)
  return a_spline_points_;
}

// repeated .pb.PDK.inner_object a_inner_object_data = 3;
inline int FreespaceDataChannel::_internal_a_inner_object_data_size() const {
  return a_inner_object_data_.size();
}
inline int FreespaceDataChannel::a_inner_object_data_size() const {
  return _internal_a_inner_object_data_size();
}
inline void FreespaceDataChannel::clear_a_inner_object_data() {
  a_inner_object_data_.Clear();
}
inline ::pb::PDK::inner_object* FreespaceDataChannel::mutable_a_inner_object_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb.PDK.FreespaceDataChannel.a_inner_object_data)
  return a_inner_object_data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::inner_object >*
FreespaceDataChannel::mutable_a_inner_object_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.PDK.FreespaceDataChannel.a_inner_object_data)
  return &a_inner_object_data_;
}
inline const ::pb::PDK::inner_object& FreespaceDataChannel::_internal_a_inner_object_data(int index) const {
  return a_inner_object_data_.Get(index);
}
inline const ::pb::PDK::inner_object& FreespaceDataChannel::a_inner_object_data(int index) const {
  // @@protoc_insertion_point(field_get:pb.PDK.FreespaceDataChannel.a_inner_object_data)
  return _internal_a_inner_object_data(index);
}
inline ::pb::PDK::inner_object* FreespaceDataChannel::_internal_add_a_inner_object_data() {
  return a_inner_object_data_.Add();
}
inline ::pb::PDK::inner_object* FreespaceDataChannel::add_a_inner_object_data() {
  ::pb::PDK::inner_object* _add = _internal_add_a_inner_object_data();
  // @@protoc_insertion_point(field_add:pb.PDK.FreespaceDataChannel.a_inner_object_data)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::inner_object >&
FreespaceDataChannel::a_inner_object_data() const {
  // @@protoc_insertion_point(field_list:pb.PDK.FreespaceDataChannel.a_inner_object_data)
  return a_inner_object_data_;
}

// repeated .pb.PDK.PointXY a_bspline_control_points = 4;
inline int FreespaceDataChannel::_internal_a_bspline_control_points_size() const {
  return a_bspline_control_points_.size();
}
inline int FreespaceDataChannel::a_bspline_control_points_size() const {
  return _internal_a_bspline_control_points_size();
}
inline void FreespaceDataChannel::clear_a_bspline_control_points() {
  a_bspline_control_points_.Clear();
}
inline ::pb::PDK::PointXY* FreespaceDataChannel::mutable_a_bspline_control_points(int index) {
  // @@protoc_insertion_point(field_mutable:pb.PDK.FreespaceDataChannel.a_bspline_control_points)
  return a_bspline_control_points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >*
FreespaceDataChannel::mutable_a_bspline_control_points() {
  // @@protoc_insertion_point(field_mutable_list:pb.PDK.FreespaceDataChannel.a_bspline_control_points)
  return &a_bspline_control_points_;
}
inline const ::pb::PDK::PointXY& FreespaceDataChannel::_internal_a_bspline_control_points(int index) const {
  return a_bspline_control_points_.Get(index);
}
inline const ::pb::PDK::PointXY& FreespaceDataChannel::a_bspline_control_points(int index) const {
  // @@protoc_insertion_point(field_get:pb.PDK.FreespaceDataChannel.a_bspline_control_points)
  return _internal_a_bspline_control_points(index);
}
inline ::pb::PDK::PointXY* FreespaceDataChannel::_internal_add_a_bspline_control_points() {
  return a_bspline_control_points_.Add();
}
inline ::pb::PDK::PointXY* FreespaceDataChannel::add_a_bspline_control_points() {
  ::pb::PDK::PointXY* _add = _internal_add_a_bspline_control_points();
  // @@protoc_insertion_point(field_add:pb.PDK.FreespaceDataChannel.a_bspline_control_points)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::PDK::PointXY >&
FreespaceDataChannel::a_bspline_control_points() const {
  // @@protoc_insertion_point(field_list:pb.PDK.FreespaceDataChannel.a_bspline_control_points)
  return a_bspline_control_points_;
}

// repeated sint32 a_control_points_status = 5;
inline int FreespaceDataChannel::_internal_a_control_points_status_size() const {
  return a_control_points_status_.size();
}
inline int FreespaceDataChannel::a_control_points_status_size() const {
  return _internal_a_control_points_status_size();
}
inline void FreespaceDataChannel::clear_a_control_points_status() {
  a_control_points_status_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FreespaceDataChannel::_internal_a_control_points_status(int index) const {
  return a_control_points_status_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FreespaceDataChannel::a_control_points_status(int index) const {
  // @@protoc_insertion_point(field_get:pb.PDK.FreespaceDataChannel.a_control_points_status)
  return _internal_a_control_points_status(index);
}
inline void FreespaceDataChannel::set_a_control_points_status(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  a_control_points_status_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.PDK.FreespaceDataChannel.a_control_points_status)
}
inline void FreespaceDataChannel::_internal_add_a_control_points_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  a_control_points_status_.Add(value);
}
inline void FreespaceDataChannel::add_a_control_points_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_a_control_points_status(value);
  // @@protoc_insertion_point(field_add:pb.PDK.FreespaceDataChannel.a_control_points_status)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
FreespaceDataChannel::_internal_a_control_points_status() const {
  return a_control_points_status_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
FreespaceDataChannel::a_control_points_status() const {
  // @@protoc_insertion_point(field_list:pb.PDK.FreespaceDataChannel.a_control_points_status)
  return _internal_a_control_points_status();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
FreespaceDataChannel::_internal_mutable_a_control_points_status() {
  return &a_control_points_status_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
FreespaceDataChannel::mutable_a_control_points_status() {
  // @@protoc_insertion_point(field_mutable_list:pb.PDK.FreespaceDataChannel.a_control_points_status)
  return _internal_mutable_a_control_points_status();
}

// optional float f_vehicle_heading_rad = 8;
inline bool FreespaceDataChannel::_internal_has_f_vehicle_heading_rad() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool FreespaceDataChannel::has_f_vehicle_heading_rad() const {
  return _internal_has_f_vehicle_heading_rad();
}
inline void FreespaceDataChannel::clear_f_vehicle_heading_rad() {
  f_vehicle_heading_rad_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float FreespaceDataChannel::_internal_f_vehicle_heading_rad() const {
  return f_vehicle_heading_rad_;
}
inline float FreespaceDataChannel::f_vehicle_heading_rad() const {
  // @@protoc_insertion_point(field_get:pb.PDK.FreespaceDataChannel.f_vehicle_heading_rad)
  return _internal_f_vehicle_heading_rad();
}
inline void FreespaceDataChannel::_internal_set_f_vehicle_heading_rad(float value) {
  _has_bits_[0] |= 0x00000002u;
  f_vehicle_heading_rad_ = value;
}
inline void FreespaceDataChannel::set_f_vehicle_heading_rad(float value) {
  _internal_set_f_vehicle_heading_rad(value);
  // @@protoc_insertion_point(field_set:pb.PDK.FreespaceDataChannel.f_vehicle_heading_rad)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace PDK
}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_pdk_5fRadarFreespace_2eproto
